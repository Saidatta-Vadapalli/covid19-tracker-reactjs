[{"C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\App.js":"1","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\index.js":"2","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\Cards\\Cards.jsx":"3","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\Chart\\Chart.jsx":"4","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\CountryPicker\\CountryPicker.jsx":"5","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\index.js":"6","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\api\\index.js":"7"},{"size":1195,"mtime":1608857245010,"results":"8","hashOfConfig":"9"},{"size":153,"mtime":1608845227762,"results":"10","hashOfConfig":"9"},{"size":2872,"mtime":1608926054235,"results":"11","hashOfConfig":"9"},{"size":1615,"mtime":1609014350728,"results":"12","hashOfConfig":"9"},{"size":690,"mtime":1609011774016,"results":"13","hashOfConfig":"9"},{"size":177,"mtime":1608856297496,"results":"14","hashOfConfig":"9"},{"size":1523,"mtime":1609014226345,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ukhaa0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\App.js",[],["35","36"],"C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\index.js",[],["37","38"],"C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\Cards\\Cards.jsx",[],"C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\Chart\\Chart.jsx",["39"],"import React, { useState, useEffect } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nimport { fetchDailyData } from \"../../api/\";\r\n\r\nconst Chart = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const dailyData = await fetchDailyData();\r\n      setDailyData(dailyData);\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = ( \r\n  \r\n        dailyData.length ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n              datasets: [\r\n                {\r\n                  data: dailyData.map(({ confirmed }) => confirmed),\r\n                  label: \"Infected\",\r\n                  borderColor: \"#3333ff\",\r\n                  fill: true,\r\n                },\r\n                {\r\n                  data: dailyData.map(({ deaths }) => deaths),\r\n                  label: \"Deaths\",\r\n                  borderColor: \"red\",\r\n                  backgroundColor: \"rgba(255,0,0,0.5)\",\r\n                  fill: true,\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: \"Total cases due to covid19\",\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: \"right\",\r\n              },\r\n            }}\r\n          />\r\n        ) : null\r\n  );\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\CountryPicker\\CountryPicker.jsx",["40"],"import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { countries } from \"../../api\";\r\n\r\nconst CountryPicker = () => {\r\n  const [fetchCountries, setFetchCountires] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setFetchCountires(await countries);\r\n    };\r\n\r\n    fetchCountries();\r\n  }, [setFetchCountires]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect>\r\n        <option value=\"global\">Global</option>\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\Components\\index.js",[],"C:\\Users\\Sai\\Documents\\webdev_workspace\\covid19-tracker-reactjs\\src\\api\\index.js",["41"],"import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api/\";\r\nconst urlDaily = \"https://covid19.mathdro.id/api/daily\";\r\nconst urlCountries = \"https://covid19.mathdro.id/api/countries\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    //one way of destructuring the data not the most efficient way to do it\r\n    // const { data } = await axios.get(url);\r\n    // const modifiedData = {\r\n\r\n    //   confirmed: data.confirmed,\r\n    //   recovered: data.recovered,\r\n    //   deaths: data.deaths,\r\n    //   lastUpdate: data.lastUpdate,\r\n\r\n    // };\r\n    //efficient way to destructure the data\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(url);\r\n    // const modifiedData = {\r\n    //   confirmed: confirmed,\r\n    //   recovered: recovered,\r\n    //   deaths: deaths,\r\n    //   lastUpdated: lastUpdate, //rather than storing them like this , even more effective way is to directly return them\r\n    // };\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(urlDaily);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const response = axios.get(urlCountries);\r\n  } catch (error) {}\r\n};\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"42","replacedBy":"46"},{"ruleId":"44","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":16,"nodeType":"50","messageId":"51","endLine":2,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":7,"column":10,"nodeType":"50","messageId":"51","endLine":7,"endColumn":24},{"ruleId":"48","severity":1,"message":"53","line":49,"column":11,"nodeType":"50","messageId":"51","endLine":49,"endColumn":19},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"no-unused-vars","'Bar' is defined but never used.","Identifier","unusedVar","'fetchCountries' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]